package JavaProgramming;

import java.util.Scanner;

//1.Create a class to represent the ATM machine.
//        2. Design the user interface for the ATM, including options such as withdrawing, depositing, and
//        checking the balance.
//        3. Implement methods for each option, such as withdraw(amount), deposit(amount), and
//        checkBalance().
//        4. Create a class to represent the user's bank account, which stores the account balance.
//        5. Connect the ATM class with the user's bank account class to access and modify the account
//        balance.
//        6. Validate user input to ensure it is within acceptable limits (e.g., sufficient balance for withdrawals).
//        7. Display appropriate messages to the user based on their chosen options and the success or failure
//        of their transactions.
class User_Bank_Account {
    int account_balance = 300000;

    int getAccountBalance() {
        return account_balance;
    }

    void setAccountBalance(int newBalance) {
        account_balance = newBalance;
    }
}

public class ATM_Machine {
    static User_Bank_Account account = new User_Bank_Account();

    static void withdraw(int amount) {
        if (account.getAccountBalance() < amount) {
            System.out.println("Entered amount exceeds the account balance limit");
        } else {
            account.setAccountBalance(account.getAccountBalance() - amount);
            System.out.println("Withdraw successful. New balance: " + account.getAccountBalance());
        }
    }

    static void deposit(int amount) {
        account.setAccountBalance(account.getAccountBalance() + amount);
        System.out.println("Deposit successful. New balance: " + account.getAccountBalance());
    }

    static void check_balance() {
        System.out.println("The current balance of your account is: " + account.getAccountBalance());
    }

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        while (true) {
            System.out.println("Enter the activity you want to do (1: Withdraw, 2: Deposit, 3: Check Balance, 4: Exit): ");
            int choice = sc.nextInt();
            switch (choice) {
                case 1:
                    System.out.println("Enter the amount you want to withdraw: ");
                    int withdrawAmount = sc.nextInt();
                    withdraw(withdrawAmount);
                    break;
                case 2:
                    System.out.println("Enter the amount you want to deposit: ");
                    int depositAmount = sc.nextInt();
                    deposit(depositAmount);
                    break;
                case 3:
                    check_balance();
                    break;
                case 4:
                    System.out.println("Exiting...");
                    sc.close();
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }
}
